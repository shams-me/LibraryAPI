version: "3.8"

services:

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    restart: unless-stopped
    ports:
      - "6831:6831/udp"
      - "16686:16686"

  authDB:
    image: postgres:15.3
    container_name: auth_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: auth
      POSTGRES_PASSWORD: auth
      POSTGRES_DB: auth_db
    ports:
      - "5431:5432"
    volumes:
      - auth_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auth -d auth_db"]
      interval: 5s
      timeout: 5s
      retries: 10

  libraryDB:
    image: postgres:15.3
    container_name: library_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: library
      POSTGRES_PASSWORD: library
      POSTGRES_DB: library_db
    ports:
      - "5433:5432"
    volumes:
      - library_db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U films -d films_db"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7.0.11
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 10s
      retries: 10

  elastic:
    image: elasticsearch:8.7.1
    container_name: elastic_dev
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - logger.level=ERROR
    ports:
      - "9200:9200"
    volumes:
      - elastic:/usr/share/elasticsearch/data
    healthcheck:
      test: curl -s http://elastic:9200 > /dev/null || exit 1
      interval: 5s
      timeout: 10s
      retries: 10
    deploy:
      resources:
        limits:
          memory: 1G


volumes:
  auth_db:
  library_db:
  elastic: